
//Displays the dates of a particular event and its timing from the record in a beautiful lwc
<!-- sldsValidatorIgnore -->
<template>
    <lightning-card title="Schedule" icon-name="standard:event">
        <!-- Date selector -->
        <div
            class="slds-var-p-horizontal_medium slds-p-bottom_small slds-border_bottom"
        >
            <div class="slds-grid slds-wrap">
                <div
                    class="slds-size_3-of-12 slds-align-middle slds-text-align_right"
                >
                    <lightning-button-icon
                        icon-name="utility:chevronleft"
                        variant="bare"
                        size="medium"
                        onclick={handlePreviousDayClick}
                        title="Previous day"
                        alternative-text="Previous day"
                    ></lightning-button-icon>
                </div>
                <div class="slds-size_6-of-12">
                    <h2
                        class="slds-text-heading_small slds-text-align_center slds-align-middle"
                    >
                        <lightning-formatted-date-time
                            month="long"
                            day="numeric"
                            year="numeric"
                            value={date}
                        ></lightning-formatted-date-time>
                    </h2>
                </div>
                <div class="slds-size_3-of-12 slds-align-middle">
                    <lightning-button-icon
                        icon-name="utility:chevronright"
                        variant="bare"
                        size="medium"
                        onclick={handleNextDayClick}
                        title="Next day"
                        alternative-text="Next day"
                    ></lightning-button-icon>
                </div>
            </div>
        </div>

        <!-- Session list -->
        <div class="slds-var-p-horizontal_medium slds-p-top_small">
            <div class="spinner-container slds-align_absolute-center">
                <lightning-spinner
                    lwc:if={loading}
                    size="medium"
                    alternative-text="Loading"
                ></lightning-spinner>
                <c-error-panel lwc:elseif={error} errors={error}></c-error-panel>
                <p lwc:elseif={isNoSessionAvailable}>
                    No sessions are scheduled on this day.
                </p>
                <div lwc:else>
                    <h2 class="slds-text-heading_small slds-p-bottom_small">
                        <strong>{sessionCountLabel}</strong>
                    </h2>
                    <template for:each={sessions} for:item="session">
                        <!-- Session card -->
                        <div
                            key={session.Id}
                            class="slds-box slds-box_xx-small slds-p-top_small slds-p-bottom_x-small slds-m-bottom_xx-small"
                        >
                            <div class="slds-grid slds-wrap">
                                <div class="slds-size_11-of-12">
                                    <div class="slds-grid slds-wrap">
                                        <!-- Start time -->
                                        <div class="slds-size_1-of-3">
                                            <div
                                                class="slds-form__item"
                                                role="listitem"
                                            >
                                                <div
                                                    class="slds-form-element slds-form-element_stacked"
                                                >
                                                    <label
                                                        class="slds-form-element__label"
                                                        for={session.labelStartTime}
                                                        >Start</label
                                                    >
                                                    <div
                                                        class="slds-form-element__control"
                                                    >
                                                        <lightning-formatted-date-time
                                                            value={session.Start_Time__c}
                                                            hour="2-digit"
                                                            hour12="false"
                                                            minute="2-digit"
                                                            time-zone="UTC"
                                                            id={session.labelStartTime}
                                                        >
                                                        </lightning-formatted-date-time>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- End time -->
                                        <div class="slds-size_1-of-3">
                                            <div
                                                class="slds-form__item"
                                                role="listitem"
                                            >
                                                <div
                                                    class="slds-form-element slds-form-element_stacked"
                                                >
                                                    <label
                                                        class="slds-form-element__label"
                                                        for={session.labelEndTime}
                                                        >End</label
                                                    >
                                                    <div
                                                        class="slds-form-element__control"
                                                    >
                                                        <lightning-formatted-date-time
                                                            value={session.End_Time__c}
                                                            hour="2-digit"
                                                            hour12="false"
                                                            minute="2-digit"
                                                            time-zone="UTC"
                                                            id={session.labelEndTime}
                                                        >
                                                        </lightning-formatted-date-time>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Status -->
                                        <div class="slds-size_1-of-3">
                                            <div
                                                class="slds-form__item"
                                                role="listitem"
                                            >
                                                <div
                                                    class="slds-form-element slds-form-element_stacked"
                                                >
                                                    <template lwc:if={isCommunity}>
                                                        <label
                                                        class="slds-form-element__label"
                                                        for={session.labelPrice}
                                                        >Price</label
                                                        >
                                                        <div
                                                            class="slds-form-element__control"
                                                            id={session.labelPrice}
                                                        >
                                                            {session.Experience__r.Price__c}
                                                        </div>
                                                    </template>
                                                    <template lwc:else>
                                                        <label
                                                            class="slds-form-element__label"
                                                            for={session.labelStatus}
                                                            >Status</label
                                                        >
                                                        <div
                                                            class="slds-form-element__control"
                                                            id={session.labelStatus}
                                                        >
                                                            {session.Status__c}
                                                        </div>
                                                    </template>
                                                </div>
                                            </div>
                                        </div>
                                        <!-- Bookings -->
                                        <div class="slds-size_1-of-1 slds-m-top_medium">
                                            <div
                                                class="slds-form__item"
                                                role="listitem"
                                            >
                                                <div
                                                    class="slds-form-element slds-form-element_stacked"
                                                >
                                                    <label
                                                        class="slds-form-element__label"
                                                        for={session.labelBookings}
                                                        >Bookings:
                                                        {session.Booked_Slots__c}/{session.Capacity__c}</label
                                                    >
                                                    <div
                                                        class="slds-form-element__control"
                                                    >
                                                        <div
                                                            class="slds-grid slds-wrap"
                                                        >
                                                            <div
                                                                class="slds-size_10-of-12 slds-align-middle"
                                                            >
                                                                <lightning-progress-bar
                                                                    value={session.Percentage_Booked__c}
                                                                    size="large"
                                                                    variant="circular"
                                                                    id={session.labelBookings}
                                                                ></lightning-progress-bar>
                                                            </div>
                                                            <div
                                                                class="slds-size_2-of-12 slds-align_absolute-center"
                                                            >
                                                                <p>
                                                                    <strong
                                                                        >{session.Percentage_Booked__c}%</strong
                                                                    >
                                                                </p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div
                                    class="slds-size_1-of-12 slds-align_absolute-center"
                                >
                                <template lwc:if={isCommunity}>
                                    <lightning-button-icon
                                            icon-name="utility:cart"
                                            variant="bare"
                                            data-id={session.Id}
                                            size="large"
                                            onclick={handleBookSessionClick}
                                            title="Book session"
                                            alternative-text="Book session"
                                        ></lightning-button-icon>
                                </template>
                                <template lwc:else>
                                    <lightning-button-icon
                                        icon-name="action:preview"
                                        variant="brand"
                                        data-id={session.Id}
                                        size="large"
                                        onclick={handleViewSessionClick}
                                        title="Open record"
                                        alternative-text="Open record"
                                    ></lightning-button-icon>
                                </template>
                                </div>
                            </div>
                        </div>
                    </template>
                </div>
            </div>
        </div>
    </lightning-card>
</template>


import { LightningElement, api, wire } from 'lwc';
import { NavigationMixin } from 'lightning/navigation';
import { subscribe, MessageContext } from 'lightning/messageService';
import EXPERIENCE_SELECTED_MESSAGE from '@salesforce/messageChannel/ExperienceSelected__c';
import getExperienceSessionsForDate from '@salesforce/apex/ExperienceController.getExperienceSessionsForDate';
import isCommunity from '@salesforce/apex/ContextService.isCommunity';

export default class ExperienceSchedule extends NavigationMixin(
    LightningElement
) {
    @api recordId;
    sessions = [];
    error;
    loading = true;
    date = new Date();
    isCommunity;

    connectedCallback() {
        this.experienceSelectionSubscription = subscribe(
            this.messageContext,
            EXPERIENCE_SELECTED_MESSAGE,
            (message) => this.handleExperienceSelected(message.experienceId)
        );
    }

    @wire(MessageContext) messageContext;
    experienceSelectionSubscription;

    @wire(isCommunity)
    wiredCommunityInfo({ error, data }) {
        if (error) {
            this.error = error;
            this.isCommunity = undefined;
        } else if (data) {
            this.isCommunity = data;
            this.error = undefined;
        }
    }

    @wire(getExperienceSessionsForDate, {
        experienceId: '$recordId',
        timestamp: '$timestamp'
    })
    wiredSessions({ error, data }) {
        this.loading = false;
        if (error) {
            this.error = error;
            this.sessions = undefined;
        } else if (data) {
            this.error = undefined;
            this.sessions = data.map(sessionRecord => {
                // Clone record to add extra fields and avoid proxy issues
                const session = { ...sessionRecord };
                // Generate unique labels for accessibility
                session.labelStartTime = `start${session.Id}`;
                session.labelEndTime = `end${session.Id}`;
                session.labelStatus = `status${session.Id}`;
                session.labelBookings = `bookings${session.Id}`;
                session.labelPrice = `price${session.Id}`;
                return session;
            });
        } else {
            this.sessions = [];
        }
    }

    handleExperienceSelected(experienceId) {
        this.recordId = experienceId;
    }

    handleNextDayClick() {
        const newDate = new Date(this.date);
        newDate.setDate(newDate.getDate() +1);
        this.date = newDate;
        this.loading = true;
    }

    handlePreviousDayClick() {
        const newDate = new Date(this.date);
        newDate.setDate(newDate.getDate() -1);
        this.date = newDate;
        this.loading = true;
    }

    handleViewSessionClick(event) {
        const sessionId = event.currentTarget.dataset.id;
        this[NavigationMixin.Navigate]({
            type: 'standard__recordPage',
            attributes: {
                recordId: sessionId,
                actionName: 'view'
            }
        });
    }

    get timestamp() {
        return this.date.getTime();
    }

    get isNoSessionAvailable() {
        return this.sessions?.length === 0;
    }

    get sessionCountLabel() {
        const count = this.sessions.length;
        if (count === 1) {
            return 'A session is scheduled on this day:';
        }
        return `${count} sessions are scheduled on this day:`;
    }

    async handleBookSessionClick(event) {
        const sessionId = event.currentTarget.dataset.id;
        const result = await MyModal.open({
            size: 'large',
            description: 'Book session',
            sessionId: this.recordId,
        });
        console.log(result);
    }
}

<?xml version="1.0" encoding="UTF-8" ?>
<LightningComponentBundle xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <isExposed>true</isExposed>
    <masterLabel>Experience Schedule</masterLabel>
    <description
    >Displays sessions' availability and capacity for an experience.</description>
    <targets>
        <target>lightning__RecordPage</target>
        <target>lightningCommunity__Page</target>
    </targets>
    <targetConfigs>
        <targetConfig targets="lightning__RecordPage">
            <objects>
              <object>Experience__c</object>
            </objects>
            <supportedFormFactors>
                <supportedFormFactor type="Large" />
                <supportedFormFactor type="Small" />
            </supportedFormFactors>
          </targetConfig>
    </targetConfigs>
</LightningComponentBundle>

.spinner-container {
    position: relative;
    min-height: 7rem;
}

label {
    font-weight: bold !important;
}
